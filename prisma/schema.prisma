generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model SalesOrder {
    id                     String                       @id @default(cuid())
    createdAt              DateTime                     @default(now()) @map("created_at")
    updatedAt              DateTime                     @updatedAt @map("updated_at")
    orderDate              DateTime                     @map("order_date")
    dueDate                DateTime                     @map("due_date")
    userId                 String                       @default("") @map("user_id")
    status                 SalesOrderStatus             @default(NEW_ORDER)
    isDraft                Boolean                      @default(true) @map("is_draft")
    isNewCustomer          Boolean                      @default(false) @map("is_new_customer")
    externalId             String                       @default("") @map("external_id")
    referenceId            String                       @default("") @map("reference_id")
    salesRepName           String                       @default("") @map("sales_rep_name")
    salesRepEmailAddress   String                       @default("") @map("sales_rep_email_address")
    customerServiceRepName String                       @default("") @map("customer_service_rep_name")
    companyName            String                       @default("") @map("company_name")
    contactName            String                       @default("") @map("contact_name")
    phoneNumber            String                       @default("") @map("phone_number")
    emailAddress           String                       @default("") @map("email_address")
    shippingAddress        String                       @default("") @map("shipping_address")
    billingAddress         String                       @default("") @map("billing_address")
    notes                  String                       @default("")
    trackingNumber         String                       @default("") @map("tracking_number")
    discount               Int                          @default(0)
    shippingPrice          Float                        @default(0.00) @map("shipping_price")
    grandTotal             Float                        @default(0.00) @map("grand_total")
    approvedProof          Boolean                      @default(false) @map("approved_proof")
    partsOrdered           Boolean                      @default(false) @map("parts_ordered")
    partsReceived          Boolean                      @default(false) @map("parts_received")
    //
    products               SalesOrderProduct[]
    //
    assembledProducts      SalesOrderAssembledProduct[]

    @@map("SalesOrders")
}

model SalesOrderProduct {
    id             String      @id @default(cuid())
    createdAt      DateTime    @default(now()) @map("created_at")
    updatedAt      DateTime    @updatedAt @map("updated_at")
    // TODO: Rename item to category and create a Category enum.
    item           String      @default("")
    fileName       String      @default("") @map("file_name")
    style          String      @default("")
    color          String      @default("")
    mockupImageUrl String      @default("") @map("mockup_image_url")
    notes          String      @default("")
    quantityOfXS   Int         @default(0) @map("quantity_of_xs")
    quantityOfSM   Int         @default(0) @map("quantity_of_sm")
    quantityOfMD   Int         @default(0) @map("quantity_of_md")
    quantityOfLG   Int         @default(0) @map("quantity_of_lg")
    quantityOfXL   Int         @default(0) @map("quantity_of_xl")
    quantityOf2XL  Int         @default(0) @map("quantity_of_2xl")
    quantityOf3XL  Int         @default(0) @map("quantity_of_3xl")
    quantityOf4XL  Int         @default(0) @map("quantity_of_4xl")
    totalQuantity  Int         @default(0) @map("total_quantity")
    unitPrice      Float       @default(0.00) @map("unit_price")
    subtotal       Float       @default(0.00)
    //
    salesOrder     SalesOrder? @relation(fields: [salesOrderId], references: [id])
    salesOrderId   String?     @map("sales_order_id")

    @@map("SalesOrderProducts")
}

model SalesOrderAssembledProduct {
    id           String      @id @default(cuid())
    createdAt    DateTime    @default(now()) @map("created_at")
    updatedAt    DateTime    @updatedAt @map("updated_at")
    // TODO: Rename item to category and create a Category enum.
    item         String
    allAssembled Boolean     @default(false) @map("all_assembled")
    //
    salesOrder   SalesOrder? @relation(fields: [salesOrderId], references: [id])
    salesOrderId String?     @map("sales_order_id")

    @@map("SalesOrderAssembledProducts")
}

enum SalesOrderStatus {
    NEW_ORDER
    DESIGN
    PRODUCTION
}
